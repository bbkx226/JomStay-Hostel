package DesignUI;

import Models.Application;
import Models.Student;
import Utils.ApplicationHandling;
import Utils.FileDataHandling;
import Utils.PopUpWindow;
import Utils.UserHandling;
import Utils.Validator;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class RecordAD extends javax.swing.JFrame {
    private final ArrayList<Student> totalStudents = new UserHandling().totalStudents;
    private final ArrayList<Application> totalApplications = new ApplicationHandling().totalApplications;
    private ArrayList<Application> studentApplications;
    private int record = 0;

    /**
     * Creates new form RecordAD
     */
    public RecordAD() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        hostelIcon = new javax.swing.JLabel();
        applicationIcon = new javax.swing.JLabel();
        signoutIcon = new javax.swing.JLabel();
        students = new javax.swing.JLabel();
        reportsIcon = new javax.swing.JLabel();
        exitButton = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        studentTable = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        roomID = new javax.swing.JLabel();
        firstQuery = new javax.swing.JButton();
        nextQuery = new javax.swing.JButton();
        lastQuery = new javax.swing.JButton();
        previousQuery = new javax.swing.JButton();
        searchBox = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        doneButton = new javax.swing.JButton();
        studentIDBox = new javax.swing.JTextField();
        studentNameBox = new javax.swing.JTextField();
        userNameBox = new javax.swing.JTextField();
        ICBox = new javax.swing.JTextField();
        genderDropbox = new javax.swing.JComboBox<>();
        phoneBox = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        emailBox = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        recordTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(153, 153, 255));

        hostelIcon.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        hostelIcon.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        hostelIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/hostel.png"))); // NOI18N
        hostelIcon.setText("Rooms");
        hostelIcon.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        hostelIcon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                hostelIconMouseClicked(evt);
            }
        });

        applicationIcon.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        applicationIcon.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        applicationIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/application.png"))); // NOI18N
        applicationIcon.setText("Application");
        applicationIcon.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        applicationIcon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                applicationIconMouseClicked(evt);
            }
        });

        signoutIcon.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        signoutIcon.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        signoutIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/log-out.png"))); // NOI18N
        signoutIcon.setText("Sign out");
        signoutIcon.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        signoutIcon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                signoutIconMouseClicked(evt);
            }
        });

        students.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        students.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        students.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/student.png"))); // NOI18N
        students.setText("Students");
        students.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        reportsIcon.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        reportsIcon.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        reportsIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/seo-report.png"))); // NOI18N
        reportsIcon.setText("Reports");
        reportsIcon.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        reportsIcon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                reportsIconMouseClicked(evt);
            }
        });

        exitButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/x.png"))); // NOI18N
        exitButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        exitButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exitButtonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(hostelIcon)
                .addGap(110, 110, 110)
                .addComponent(applicationIcon)
                .addGap(122, 122, 122)
                .addComponent(students)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 126, Short.MAX_VALUE)
                .addComponent(reportsIcon)
                .addGap(130, 130, 130)
                .addComponent(signoutIcon)
                .addGap(70, 70, 70)
                .addComponent(exitButton)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(exitButton))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(hostelIcon)
                            .addComponent(applicationIcon)
                            .addComponent(students)
                            .addComponent(reportsIcon)
                            .addComponent(signoutIcon))))
                .addContainerGap(29, Short.MAX_VALUE))
        );

        studentTable.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(153, 153, 255)));
        studentTable.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        studentTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Student ID", "Name", "Latest Login Date"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        studentTable.getTableHeader().setReorderingAllowed(false);
        studentTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                studentTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(studentTable);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(153, 153, 255)));

        roomID.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N

        firstQuery.setBackground(new java.awt.Color(153, 153, 255));
        firstQuery.setFont(new java.awt.Font("Poppins", 1, 12)); // NOI18N
        firstQuery.setForeground(new java.awt.Color(240, 240, 240));
        firstQuery.setText("|<");
        firstQuery.setToolTipText("");
        firstQuery.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        firstQuery.setMaximumSize(new java.awt.Dimension(22, 22));
        firstQuery.setMinimumSize(new java.awt.Dimension(22, 22));
        firstQuery.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                firstQueryActionPerformed(evt);
            }
        });

        nextQuery.setBackground(new java.awt.Color(153, 153, 255));
        nextQuery.setFont(new java.awt.Font("Poppins", 1, 12)); // NOI18N
        nextQuery.setForeground(new java.awt.Color(240, 240, 240));
        nextQuery.setText(">");
        nextQuery.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        nextQuery.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextQueryActionPerformed(evt);
            }
        });

        lastQuery.setBackground(new java.awt.Color(153, 153, 255));
        lastQuery.setFont(new java.awt.Font("Poppins", 1, 12)); // NOI18N
        lastQuery.setForeground(new java.awt.Color(240, 240, 240));
        lastQuery.setText(">|");
        lastQuery.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lastQuery.setMaximumSize(new java.awt.Dimension(22, 22));
        lastQuery.setMinimumSize(new java.awt.Dimension(22, 22));
        lastQuery.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lastQueryActionPerformed(evt);
            }
        });

        previousQuery.setBackground(new java.awt.Color(153, 153, 255));
        previousQuery.setFont(new java.awt.Font("Poppins", 1, 12)); // NOI18N
        previousQuery.setForeground(new java.awt.Color(240, 240, 240));
        previousQuery.setText("<");
        previousQuery.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        previousQuery.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                previousQueryActionPerformed(evt);
            }
        });

        searchBox.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        searchBox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                searchBoxKeyPressed(evt);
            }
        });

        searchButton.setBackground(new java.awt.Color(153, 153, 255));
        searchButton.setFont(new java.awt.Font("Poppins", 1, 14)); // NOI18N
        searchButton.setForeground(new java.awt.Color(255, 255, 255));
        searchButton.setText("Search");
        searchButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Arial", 3, 16)); // NOI18N
        jLabel1.setText("ID");

        jLabel5.setFont(new java.awt.Font("Arial", 3, 16)); // NOI18N
        jLabel5.setText("Name");

        jLabel6.setFont(new java.awt.Font("Arial", 3, 16)); // NOI18N
        jLabel6.setText("Username");

        jLabel7.setFont(new java.awt.Font("Arial", 3, 16)); // NOI18N
        jLabel7.setText("Passport / IC No.");

        jLabel8.setFont(new java.awt.Font("Arial", 3, 16)); // NOI18N
        jLabel8.setText("Gender");

        doneButton.setBackground(new java.awt.Color(153, 153, 255));
        doneButton.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        doneButton.setForeground(new java.awt.Color(255, 255, 255));
        doneButton.setText("Done");
        doneButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        doneButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doneButtonActionPerformed(evt);
            }
        });

        studentIDBox.setEditable(false);
        studentIDBox.setBackground(new java.awt.Color(255, 255, 255));
        studentIDBox.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        studentIDBox.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        studentNameBox.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        studentNameBox.setText("-");
        studentNameBox.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(153, 153, 255)));

        userNameBox.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        userNameBox.setText("-");
        userNameBox.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(153, 153, 255)));

        ICBox.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        ICBox.setText("-");
        ICBox.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(153, 153, 255)));

        genderDropbox.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        genderDropbox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Male", "Female", "Others" }));

        phoneBox.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        phoneBox.setText("-");
        phoneBox.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(153, 153, 255)));

        jLabel9.setFont(new java.awt.Font("Arial", 3, 16)); // NOI18N
        jLabel9.setText("Phone Number");

        jLabel10.setFont(new java.awt.Font("Arial", 3, 16)); // NOI18N
        jLabel10.setText("Email");

        emailBox.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        emailBox.setText("-");
        emailBox.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(153, 153, 255)));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(441, 441, 441)
                        .addComponent(roomID, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(studentIDBox, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addComponent(searchBox, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(searchButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(firstQuery, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(previousQuery, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(8, 8, 8)
                                .addComponent(nextQuery, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel6))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(userNameBox, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(ICBox, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(phoneBox, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(studentNameBox, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(emailBox, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(genderDropbox, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(doneButton))))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lastQuery, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(171, 171, 171))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lastQuery, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nextQuery)
                            .addComponent(previousQuery)
                            .addComponent(firstQuery, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(searchBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(searchButton))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(studentIDBox, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(studentNameBox, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel5)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(roomID)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userNameBox, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ICBox, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(phoneBox, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(emailBox, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(genderDropbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(doneButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        recordTable.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(153, 153, 255)));
        recordTable.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        recordTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Application ID", "Room Number", "Status", "Start Date", "End Date", "Application Date"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        recordTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(recordTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 590, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 496, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void hostelIconMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hostelIconMouseClicked
        dispose();
        new HostelAD().start();
    }//GEN-LAST:event_hostelIconMouseClicked

    private void signoutIconMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_signoutIconMouseClicked
        int dialogResult = JOptionPane.showConfirmDialog(
            null,
            "Are you ready to sign out?",
            "Popup window",
            JOptionPane.YES_NO_OPTION
        );
        if (dialogResult == JOptionPane.YES_OPTION){
            PopUpWindow.showGoodByeMessage("Thanks for using the system, have a nice day~", "Goodbye~");
            setVisible(false);
            dispose(); // Destroy screen
            new Login().setVisible(true);
        }
    }//GEN-LAST:event_signoutIconMouseClicked

    private void exitButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitButtonMouseClicked
        dispose();
    }//GEN-LAST:event_exitButtonMouseClicked

    private void studentTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_studentTableMouseClicked
        DefaultTableModel recordModel = (DefaultTableModel) recordTable.getModel();
        recordModel.setRowCount(0);
        int selectedRow = studentTable.getSelectedRow();
        if (selectedRow >= 0){
            String selectedStudentID = String.valueOf(studentTable.getModel().getValueAt(selectedRow, 0));
            for(Student student : totalStudents){
                if(student.getID().equals(selectedStudentID)){
                    record = selectedRow;
                    showStudentForm(record);
                    break;
                }            
            }
        }
        studentApplications = new ArrayList<>();
        
        for(Application application : totalApplications){
            if(application.getStudent().getID().equals(totalStudents.get(record).getID())){
                studentApplications.add(application);
            }
        }
        for(Application application : studentApplications){
            recordModel.addRow(new Object[]{application.getApplicationID(), application.getRoom().getRoomID(), application.getStatus(), ApplicationHandling.checkAndModifyDate(application.getStartDate()), ApplicationHandling.checkAndModifyDate(application.getEndDate()), ApplicationHandling.checkAndModifyDate(application.getCreateDate())});
        }
        recordTable.setModel(recordModel);
        recordModel.fireTableDataChanged();
    }//GEN-LAST:event_studentTableMouseClicked

    private void firstQueryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_firstQueryActionPerformed
        showStudentForm(0);
    }//GEN-LAST:event_firstQueryActionPerformed

    private void nextQueryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextQueryActionPerformed
        record++;
        showStudentForm(record);
    }//GEN-LAST:event_nextQueryActionPerformed

    private void lastQueryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lastQueryActionPerformed
        int total = totalStudents.size();
        showStudentForm(total - 1);
    }//GEN-LAST:event_lastQueryActionPerformed

    private void previousQueryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_previousQueryActionPerformed
        record--;
        showStudentForm(record);
    }//GEN-LAST:event_previousQueryActionPerformed

    private void searchBoxKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchBoxKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
        {
            searchStudent();
        }
    }//GEN-LAST:event_searchBoxKeyPressed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        searchStudent();
    }//GEN-LAST:event_searchButtonActionPerformed

    private void doneButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doneButtonActionPerformed
        modifyStudent();
    }//GEN-LAST:event_doneButtonActionPerformed

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        DefaultTableModel studentModel =  (DefaultTableModel) studentTable.getModel();
        studentModel.setRowCount(0);         
        for(Student student : totalStudents){
            studentModel.addRow(new Object[]{student.getID(),student.getName().replace("_", " "),student.getGender(),student.getNRIC(),student.getEmail()});
        }
   
        showStudentForm(0);
    }//GEN-LAST:event_formComponentShown

    private void applicationIconMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_applicationIconMouseClicked
        dispose();
        new ApplicationAD().start();
    }//GEN-LAST:event_applicationIconMouseClicked

    private void reportsIconMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_reportsIconMouseClicked
        dispose();
        new ReportAD().setVisible(true);
    }//GEN-LAST:event_reportsIconMouseClicked
    
    private void modifyStudent() {
        boolean flag = true;
        Student studentToModify = totalStudents.get(record);
        String oldName = studentToModify.getName();
        String oldUserName = studentToModify.getUsername();
        String oldEmail = studentToModify.getEmail();
        String oldIC = studentToModify.getNRIC();
        String oldPhone = studentToModify.getPhoneNo();
        String oldGender = studentToModify.getGender();

        String newName = studentNameBox.getText();
        String formattedNewName = FileDataHandling.nameWithSpaces(newName);
        String newUserName = userNameBox.getText();
        String newEmail = userNameBox.getText();
        String newIC = ICBox.getText();
        String newPhone = phoneBox.getText();
        String newGender = (String) genderDropbox.getModel().getSelectedItem();

        if(!Validator.isValidEmail(newEmail)){
            PopUpWindow.showFormatErrorMessage("Please re-enter your email!", "Invalid email format");
            flag = false;
        } else if(!Validator.isValidPhone(newPhone)){
            PopUpWindow.showFormatErrorMessage("Please re-enter your phone number!", "Invalid phone number format");
            flag = false;
        } else if(FileDataHandling.validateData(newUserName, newEmail)){
            userNameBox.setText("");
            emailBox.setText("");
            PopUpWindow.showErrorMessage("Please try another username or email", "Account Exists!");   
            flag = false;
        }
        
        if (flag) {
            if (!oldName.equals(formattedNewName) || !oldUserName.equals(newUserName) || !oldEmail.equals(newEmail) || !oldIC.equals(newIC) || !oldGender.equals(newGender) || !oldPhone.equals(newPhone)) {
                studentToModify.setName(formattedNewName);
                studentToModify.setUsername(newUserName);
                studentToModify.setEmail(newEmail);
                studentToModify.setNRIC(newIC);
                studentToModify.setGender(newGender);
                studentToModify.setPhoneNo(newPhone);
                UserHandling.updateStudentFile(totalStudents);
                setVisible(false);
                setVisible(true);
                PopUpWindow.showSuccessfulMessage("Your updates to the student details have been successfully applied", "Congrats!");
            }
        }
    }
    
    private void showStudentForm(int index) {
        record = getValidIndex(index);
        Student student = totalStudents.get(record);
        studentIDBox.setText(student.getID());
        studentNameBox.setText(student.getName().replace("_", " "));
        userNameBox.setText(student.getUsername());
        ICBox.setText(student.getNRIC());
        userNameBox.setText(student.getEmail());
        phoneBox.setText(student.getPhoneNo());
        emailBox.setText(student.getEmail());
        genderDropbox.setSelectedItem(student.getGender());
    }
    
    private int getValidIndex(int index) {
        if (index >= totalStudents.size()) {
            return 0;
        } else if (index < 0) {
            return totalStudents.size() - 1;
        }
        return index;
    }
    
    private void searchStudent() {
        String key = searchBox.getText().trim();
        if (key != null && key.length() > 0) {
            key = key.substring(0, 1).toUpperCase() + key.substring(1);
        }
        record = findStudentRecordNumber(key);
        if (record >= 0) {
            showStudentForm(record);
        } else {
            PopUpWindow.showErrorMessage("Your search did not match any records", "Error 404 occurred");
        }
        searchBox.setText("");
    }

    private int findStudentRecordNumber(String searchKey) {
        for (int i = 0; i < totalStudents.size(); i++) {
            Student student = totalStudents.get(i);
            if (searchKey.equals(student.getID())) {
                return i;
            }
        }
        return -1;
    }
    
    public void start() {
        new RecordAD().setVisible(true);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RecordAD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RecordAD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RecordAD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RecordAD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RecordAD().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField ICBox;
    private javax.swing.JLabel applicationIcon;
    private javax.swing.JButton doneButton;
    private javax.swing.JTextField emailBox;
    private javax.swing.JLabel exitButton;
    private javax.swing.JButton firstQuery;
    private javax.swing.JComboBox<String> genderDropbox;
    private javax.swing.JLabel hostelIcon;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton lastQuery;
    private javax.swing.JButton nextQuery;
    private javax.swing.JTextField phoneBox;
    private javax.swing.JButton previousQuery;
    private javax.swing.JTable recordTable;
    private javax.swing.JLabel reportsIcon;
    private javax.swing.JLabel roomID;
    private javax.swing.JTextField searchBox;
    private javax.swing.JButton searchButton;
    private javax.swing.JLabel signoutIcon;
    private javax.swing.JTextField studentIDBox;
    private javax.swing.JTextField studentNameBox;
    private javax.swing.JTable studentTable;
    private javax.swing.JLabel students;
    private javax.swing.JTextField userNameBox;
    // End of variables declaration//GEN-END:variables
}
