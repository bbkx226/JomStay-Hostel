// @author Brandon Ban Kai Xian TP067094
package DesignUI;

import Models.Room;
import Models.RoomType;
import Utils.PopUpWindow;
import Utils.RoomHandling;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class HostelAD extends javax.swing.JFrame {
    private final ArrayList<Room> rooms = RoomHandling.getRooms();
    
    private int record = 0;
    private boolean isAppend = false; // True for append, False for Edit
    /**
     * Creates new form Hostel
     */
    public HostelAD() {
        initComponents();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        searchField = new javax.swing.JTextField();
        yesOrNo = new javax.swing.ButtonGroup();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        hostelIcon = new javax.swing.JLabel();
        applicationIcon = new javax.swing.JLabel();
        signoutIcon = new javax.swing.JLabel();
        students = new javax.swing.JLabel();
        reportsIcon = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        searchBox = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        roomID = new javax.swing.JLabel();
        firstQuery = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        roomStatus = new javax.swing.JComboBox<>();
        nextQuery = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        yesRadioButton = new javax.swing.JRadioButton();
        noRadioButton = new javax.swing.JRadioButton();
        lastQuery = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        noOfBedsBox = new javax.swing.JTextField();
        addButton = new javax.swing.JButton();
        previousQuery = new javax.swing.JButton();
        removeButton = new javax.swing.JButton();
        doneButton = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        roomType = new javax.swing.JComboBox<>();
        jLabel17 = new javax.swing.JLabel();
        priceBox = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        specificationBox = new javax.swing.JTextField();
        freeWifiBox = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        facilitiesTextArea = new javax.swing.JTextArea();
        jLabel9 = new javax.swing.JLabel();
        floorBox = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        roomTable = new javax.swing.JTable();

        searchField.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("JomStay Hostel");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setResizable(false);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(153, 153, 255));

        hostelIcon.setBackground(new java.awt.Color(102, 102, 255));
        hostelIcon.setFont(new java.awt.Font("Baskerville Old Face", 1, 20)); // NOI18N
        hostelIcon.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        hostelIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/hostel.png"))); // NOI18N
        hostelIcon.setText("Rooms");
        hostelIcon.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 255)));
        hostelIcon.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        hostelIcon.setOpaque(true);

        applicationIcon.setBackground(new java.awt.Color(153, 153, 255));
        applicationIcon.setFont(new java.awt.Font("Baskerville Old Face", 1, 20)); // NOI18N
        applicationIcon.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        applicationIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/application.png"))); // NOI18N
        applicationIcon.setText("Application");
        applicationIcon.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        applicationIcon.setOpaque(true);
        applicationIcon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                applicationIconMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                applicationIconMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                applicationIconMouseExited(evt);
            }
        });

        signoutIcon.setBackground(new java.awt.Color(153, 153, 255));
        signoutIcon.setFont(new java.awt.Font("Baskerville Old Face", 1, 20)); // NOI18N
        signoutIcon.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        signoutIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/log-out.png"))); // NOI18N
        signoutIcon.setText("Sign out");
        signoutIcon.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        signoutIcon.setOpaque(true);
        signoutIcon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                signoutIconMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                signoutIconMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                signoutIconMouseExited(evt);
            }
        });

        students.setBackground(new java.awt.Color(153, 153, 255));
        students.setFont(new java.awt.Font("Baskerville Old Face", 1, 20)); // NOI18N
        students.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        students.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/student.png"))); // NOI18N
        students.setText("Students");
        students.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        students.setOpaque(true);
        students.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                studentsMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                studentsMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                studentsMouseExited(evt);
            }
        });

        reportsIcon.setBackground(new java.awt.Color(153, 153, 255));
        reportsIcon.setFont(new java.awt.Font("Baskerville Old Face", 1, 20)); // NOI18N
        reportsIcon.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        reportsIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/seo-report.png"))); // NOI18N
        reportsIcon.setText("Reports");
        reportsIcon.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        reportsIcon.setOpaque(true);
        reportsIcon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                reportsIconMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                reportsIconMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                reportsIconMouseExited(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(hostelIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(applicationIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(students, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(reportsIcon, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(signoutIcon, javax.swing.GroupLayout.DEFAULT_SIZE, 260, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(applicationIcon, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(hostelIcon, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 149, Short.MAX_VALUE)
            .addComponent(students, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(reportsIcon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(signoutIcon, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jLabel1.setFont(new java.awt.Font("Baskerville Old Face", 1, 42)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Room Management");

        searchBox.setFont(new java.awt.Font("Baskerville Old Face", 0, 14)); // NOI18N
        searchBox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                searchBoxKeyPressed(evt);
            }
        });

        searchButton.setBackground(new java.awt.Color(153, 153, 255));
        searchButton.setFont(new java.awt.Font("Baskerville Old Face", 1, 18)); // NOI18N
        searchButton.setText("Search");
        searchButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        searchButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                searchButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                searchButtonMouseExited(evt);
            }
        });
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(153, 153, 255)));

        jLabel2.setFont(new java.awt.Font("Baskerville Old Face", 1, 16)); // NOI18N
        jLabel2.setText("ID:");

        roomID.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N

        firstQuery.setBackground(new java.awt.Color(153, 153, 255));
        firstQuery.setFont(new java.awt.Font("Baskerville Old Face", 1, 12)); // NOI18N
        firstQuery.setText("|<");
        firstQuery.setToolTipText("");
        firstQuery.setAlignmentY(0.0F);
        firstQuery.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        firstQuery.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        firstQuery.setMaximumSize(new java.awt.Dimension(22, 22));
        firstQuery.setMinimumSize(new java.awt.Dimension(22, 22));
        firstQuery.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                firstQueryMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                firstQueryMouseExited(evt);
            }
        });
        firstQuery.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                firstQueryActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Baskerville Old Face", 1, 20)); // NOI18N
        jLabel8.setText("Status:");

        roomStatus.setFont(new java.awt.Font("Baskerville Old Face", 0, 18)); // NOI18N
        roomStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Available", "Occupied", "Reserved" }));
        roomStatus.setOpaque(true);

        nextQuery.setBackground(new java.awt.Color(153, 153, 255));
        nextQuery.setFont(new java.awt.Font("Baskerville Old Face", 1, 12)); // NOI18N
        nextQuery.setText(">");
        nextQuery.setAlignmentY(0.0F);
        nextQuery.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        nextQuery.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        nextQuery.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                nextQueryMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                nextQueryMouseExited(evt);
            }
        });
        nextQuery.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextQueryActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Baskerville Old Face", 1, 20)); // NOI18N
        jLabel13.setText("Servicing:");

        yesRadioButton.setBackground(new java.awt.Color(255, 255, 255));
        yesOrNo.add(yesRadioButton);
        yesRadioButton.setFont(new java.awt.Font("Baskerville Old Face", 0, 18)); // NOI18N
        yesRadioButton.setText("Yes");

        noRadioButton.setBackground(new java.awt.Color(255, 255, 255));
        yesOrNo.add(noRadioButton);
        noRadioButton.setFont(new java.awt.Font("Baskerville Old Face", 0, 18)); // NOI18N
        noRadioButton.setText("No");

        lastQuery.setBackground(new java.awt.Color(153, 153, 255));
        lastQuery.setFont(new java.awt.Font("Baskerville Old Face", 1, 12)); // NOI18N
        lastQuery.setText(">|");
        lastQuery.setAlignmentY(0.0F);
        lastQuery.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lastQuery.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lastQuery.setMaximumSize(new java.awt.Dimension(22, 22));
        lastQuery.setMinimumSize(new java.awt.Dimension(22, 22));
        lastQuery.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lastQueryMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lastQueryMouseExited(evt);
            }
        });
        lastQuery.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lastQueryActionPerformed(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Baskerville Old Face", 1, 20)); // NOI18N
        jLabel14.setText("Room Type:");

        noOfBedsBox.setEditable(false);
        noOfBedsBox.setBackground(new java.awt.Color(255, 255, 255));
        noOfBedsBox.setFont(new java.awt.Font("Baskerville Old Face", 0, 18)); // NOI18N
        noOfBedsBox.setBorder(null);

        addButton.setBackground(new java.awt.Color(153, 153, 255));
        addButton.setFont(new java.awt.Font("Baskerville Old Face", 1, 18)); // NOI18N
        addButton.setText("Add");
        addButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        addButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        addButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                addButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                addButtonMouseExited(evt);
            }
        });
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        previousQuery.setBackground(new java.awt.Color(153, 153, 255));
        previousQuery.setFont(new java.awt.Font("Baskerville Old Face", 1, 12)); // NOI18N
        previousQuery.setText("<");
        previousQuery.setAlignmentY(0.0F);
        previousQuery.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        previousQuery.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        previousQuery.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                previousQueryMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                previousQueryMouseExited(evt);
            }
        });
        previousQuery.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                previousQueryActionPerformed(evt);
            }
        });

        removeButton.setBackground(new java.awt.Color(153, 153, 255));
        removeButton.setFont(new java.awt.Font("Baskerville Old Face", 1, 18)); // NOI18N
        removeButton.setText("Remove");
        removeButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        removeButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                removeButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                removeButtonMouseExited(evt);
            }
        });
        removeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeButtonActionPerformed(evt);
            }
        });

        doneButton.setBackground(new java.awt.Color(153, 153, 255));
        doneButton.setFont(new java.awt.Font("Baskerville Old Face", 1, 18)); // NOI18N
        doneButton.setText("Done");
        doneButton.setToolTipText("");
        doneButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        doneButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                doneButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                doneButtonMouseExited(evt);
            }
        });
        doneButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doneButtonActionPerformed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Baskerville Old Face", 1, 20)); // NOI18N
        jLabel15.setText("No. of Beds:");

        jLabel16.setFont(new java.awt.Font("Baskerville Old Face", 1, 20)); // NOI18N
        jLabel16.setText("Specification:");

        roomType.setFont(new java.awt.Font("Baskerville Old Face", 0, 18)); // NOI18N
        roomType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Single", "Double", "Private", "Female", "Twin" }));
        roomType.setOpaque(true);

        jLabel17.setFont(new java.awt.Font("Baskerville Old Face", 1, 20)); // NOI18N
        jLabel17.setText("Price (Monthly):");

        priceBox.setEditable(false);
        priceBox.setBackground(new java.awt.Color(255, 255, 255));
        priceBox.setFont(new java.awt.Font("Baskerville Old Face", 0, 18)); // NOI18N
        priceBox.setBorder(null);

        jLabel18.setFont(new java.awt.Font("Baskerville Old Face", 1, 20)); // NOI18N
        jLabel18.setText("Free Wifi:");

        jLabel19.setFont(new java.awt.Font("Baskerville Old Face", 1, 20)); // NOI18N
        jLabel19.setText("Facilities:");

        specificationBox.setEditable(false);
        specificationBox.setBackground(new java.awt.Color(255, 255, 255));
        specificationBox.setFont(new java.awt.Font("Baskerville Old Face", 0, 18)); // NOI18N
        specificationBox.setBorder(null);

        freeWifiBox.setEditable(false);
        freeWifiBox.setBackground(new java.awt.Color(255, 255, 255));
        freeWifiBox.setFont(new java.awt.Font("Baskerville Old Face", 0, 18)); // NOI18N
        freeWifiBox.setBorder(null);

        facilitiesTextArea.setEditable(false);
        facilitiesTextArea.setBackground(new java.awt.Color(255, 255, 255));
        facilitiesTextArea.setColumns(20);
        facilitiesTextArea.setFont(new java.awt.Font("Baskerville Old Face", 1, 18)); // NOI18N
        facilitiesTextArea.setLineWrap(true);
        facilitiesTextArea.setRows(2);
        facilitiesTextArea.setWrapStyleWord(true);
        facilitiesTextArea.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        facilitiesTextArea.setDisabledTextColor(new java.awt.Color(255, 255, 255));
        facilitiesTextArea.setHighlighter(null);
        jScrollPane2.setViewportView(facilitiesTextArea);

        jLabel9.setFont(new java.awt.Font("Baskerville Old Face", 1, 20)); // NOI18N
        jLabel9.setText("Floor:");

        floorBox.setEditable(false);
        floorBox.setBackground(new java.awt.Color(255, 255, 255));
        floorBox.setFont(new java.awt.Font("Baskerville Old Face", 0, 18)); // NOI18N
        floorBox.setBorder(null);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(firstQuery, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(previousQuery, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(nextQuery, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lastQuery, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel8)
                                            .addComponent(jLabel13)
                                            .addComponent(jLabel2)
                                            .addComponent(jLabel15))
                                        .addGap(26, 26, 26))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel19)
                                            .addComponent(jLabel16))
                                        .addGap(18, 18, Short.MAX_VALUE)))
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addComponent(yesRadioButton)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(noRadioButton))
                                    .addComponent(roomStatus, 0, 127, Short.MAX_VALUE)
                                    .addComponent(roomID, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(noOfBedsBox)
                                    .addComponent(specificationBox, javax.swing.GroupLayout.Alignment.TRAILING)))
                            .addComponent(doneButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(removeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel18)
                                        .addGap(18, 18, 18)
                                        .addComponent(freeWifiBox)
                                        .addGap(21, 21, 21))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel17)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(priceBox, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                        .addComponent(jLabel14)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(roomType, 0, 141, Short.MAX_VALUE)))
                                .addGap(28, 28, 28))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addGap(18, 18, 18)
                                .addComponent(floorBox)
                                .addGap(83, 83, 83))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 378, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lastQuery, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(nextQuery)
                        .addComponent(previousQuery)
                        .addComponent(firstQuery, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(20, 20, 20)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(roomID)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(roomStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(floorBox, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(yesRadioButton)
                    .addComponent(noRadioButton)
                    .addComponent(jLabel18)
                    .addComponent(freeWifiBox, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(priceBox, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel15)
                        .addComponent(noOfBedsBox, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel17)))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(jLabel14)
                    .addComponent(roomType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(specificationBox, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel19)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 57, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(removeButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(doneButton, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );

        roomTable.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(153, 153, 255)));
        roomTable.setFont(new java.awt.Font("Baskerville Old Face", 1, 18)); // NOI18N
        roomTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Status", "Servicing", "Room Type"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Boolean.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        roomTable.getTableHeader().setReorderingAllowed(false);
        roomTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                roomTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(roomTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(searchBox, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 764, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(searchBox, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 383, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void signoutIconMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_signoutIconMouseClicked
        int dialogResult = JOptionPane.showConfirmDialog(
            null,
            "Are you ready to sign out?",
            "Popup window",
            JOptionPane.YES_NO_OPTION
        );
        if (dialogResult == JOptionPane.YES_OPTION){
            PopUpWindow.showGoodByeMessage("Thanks for using the system, have a nice day~", "Goodbye~");
            setVisible(false);
            dispose();
            new Login().setVisible(true);
        }
    }//GEN-LAST:event_signoutIconMouseClicked

    private void roomTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_roomTableMouseClicked
        int selectedRow = roomTable.getSelectedRow();
        if (selectedRow >= 0){
            String selectedRoomID = String.valueOf(roomTable.getModel().getValueAt(selectedRow, 0));
            for(Room room: rooms){
                if(room.getRoomID().equals(selectedRoomID)){
                    record = selectedRow;
                    showInForm(selectedRow);
                    break;
                }
            }
        }
    }//GEN-LAST:event_roomTableMouseClicked

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        searchRoom();
    }//GEN-LAST:event_searchButtonActionPerformed

    private void firstQueryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_firstQueryActionPerformed
        record = 0;
        showInForm(record);
    }//GEN-LAST:event_firstQueryActionPerformed

    private void nextQueryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextQueryActionPerformed
        record++;
        showInForm(record);
    }//GEN-LAST:event_nextQueryActionPerformed

    private void lastQueryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lastQueryActionPerformed
        int total = rooms.size();
        record = total - 1;
        showInForm(record);
    }//GEN-LAST:event_lastQueryActionPerformed

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        isAppend = true;
        String ID = String.format("R%03d", rooms.size()+1);
        roomID.setText(ID);
        roomStatus.setSelectedItem("Available");
        noRadioButton.doClick();
        priceBox.setText("");
        noOfBedsBox.setText("");
        floorBox.setText("");
        specificationBox.setText("");
        facilitiesTextArea.setText("");
        freeWifiBox.setText("");
        roomType.setSelectedItem("Select");
        
    }//GEN-LAST:event_addButtonActionPerformed

    private void previousQueryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_previousQueryActionPerformed
        record--;
        showInForm(record);
    }//GEN-LAST:event_previousQueryActionPerformed

    private void removeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeButtonActionPerformed
        deleteRoom();
    }//GEN-LAST:event_removeButtonActionPerformed

    private void doneButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doneButtonActionPerformed
        if(isAppend) appendRoom();
        else modifyRoom();
        dispose();
        new HostelAD().start();
        showInForm(0);
    }//GEN-LAST:event_doneButtonActionPerformed

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        DefaultTableModel tableModel = (DefaultTableModel) roomTable.getModel();
        tableModel.setRowCount(0);
        for (Room room : rooms) 
            tableModel.addRow(new Object[]{
                room.getRoomID(), 
                room.getStatus(), 
                room.isServicing(), 
                room.getRoomType().getTypeName()
            });
        showInForm(0);
    }//GEN-LAST:event_formComponentShown

    private void searchBoxKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchBoxKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER) searchRoom();
    }//GEN-LAST:event_searchBoxKeyPressed

    private void applicationIconMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_applicationIconMouseClicked
        dispose();
        new ApplicationAD().start();
    }//GEN-LAST:event_applicationIconMouseClicked

    private void studentsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_studentsMouseClicked
        dispose();
        new RecordAD().start();
    }//GEN-LAST:event_studentsMouseClicked

    private void reportsIconMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_reportsIconMouseClicked
        dispose();
        new ReportAD().start();
    }//GEN-LAST:event_reportsIconMouseClicked

    private void applicationIconMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_applicationIconMouseEntered
        applicationIcon.setBackground(new java.awt.Color(173, 216, 230));
    }//GEN-LAST:event_applicationIconMouseEntered

    private void applicationIconMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_applicationIconMouseExited
        applicationIcon.setBackground(new java.awt.Color(153, 153, 255));
    }//GEN-LAST:event_applicationIconMouseExited

    private void studentsMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_studentsMouseEntered
        students.setBackground(new java.awt.Color(173, 216, 230));
    }//GEN-LAST:event_studentsMouseEntered

    private void studentsMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_studentsMouseExited
        students.setBackground(new java.awt.Color(153, 153, 255));
    }//GEN-LAST:event_studentsMouseExited

    private void reportsIconMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_reportsIconMouseEntered
        reportsIcon.setBackground(new java.awt.Color(173, 216, 230));
    }//GEN-LAST:event_reportsIconMouseEntered

    private void reportsIconMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_reportsIconMouseExited
        reportsIcon.setBackground(new java.awt.Color(153, 153, 255));
    }//GEN-LAST:event_reportsIconMouseExited

    private void signoutIconMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_signoutIconMouseEntered
        signoutIcon.setBackground(new java.awt.Color(173, 216, 230));
    }//GEN-LAST:event_signoutIconMouseEntered

    private void signoutIconMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_signoutIconMouseExited
        signoutIcon.setBackground(new java.awt.Color(153, 153, 255));
    }//GEN-LAST:event_signoutIconMouseExited

    private void addButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addButtonMouseEntered
        addButton.setBackground(new java.awt.Color(173, 216, 230));
    }//GEN-LAST:event_addButtonMouseEntered

    private void addButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addButtonMouseExited
        addButton.setBackground(new java.awt.Color(153, 153, 255));
    }//GEN-LAST:event_addButtonMouseExited

    private void firstQueryMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_firstQueryMouseEntered
        firstQuery.setBackground(new java.awt.Color(173, 216, 230));
    }//GEN-LAST:event_firstQueryMouseEntered

    private void firstQueryMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_firstQueryMouseExited
        firstQuery.setBackground(new java.awt.Color(153, 153, 255));
    }//GEN-LAST:event_firstQueryMouseExited

    private void previousQueryMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_previousQueryMouseEntered
        previousQuery.setBackground(new java.awt.Color(173, 216, 230));
    }//GEN-LAST:event_previousQueryMouseEntered

    private void previousQueryMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_previousQueryMouseExited
        previousQuery.setBackground(new java.awt.Color(153, 153, 255));
    }//GEN-LAST:event_previousQueryMouseExited

    private void nextQueryMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nextQueryMouseEntered
        nextQuery.setBackground(new java.awt.Color(173, 216, 230));
    }//GEN-LAST:event_nextQueryMouseEntered

    private void nextQueryMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nextQueryMouseExited
        nextQuery.setBackground(new java.awt.Color(153, 153, 255));
    }//GEN-LAST:event_nextQueryMouseExited

    private void lastQueryMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lastQueryMouseEntered
        lastQuery.setBackground(new java.awt.Color(173, 216, 230));
    }//GEN-LAST:event_lastQueryMouseEntered

    private void lastQueryMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lastQueryMouseExited
        lastQuery.setBackground(new java.awt.Color(153, 153, 255));
    }//GEN-LAST:event_lastQueryMouseExited

    private void removeButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_removeButtonMouseEntered
        removeButton.setBackground(new java.awt.Color(173, 216, 230));
    }//GEN-LAST:event_removeButtonMouseEntered

    private void removeButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_removeButtonMouseExited
        removeButton.setBackground(new java.awt.Color(153, 153, 255));
    }//GEN-LAST:event_removeButtonMouseExited

    private void doneButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_doneButtonMouseEntered
        doneButton.setBackground(new java.awt.Color(173, 216, 230));
    }//GEN-LAST:event_doneButtonMouseEntered

    private void doneButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_doneButtonMouseExited
        doneButton.setBackground(new java.awt.Color(153, 153, 255));
    }//GEN-LAST:event_doneButtonMouseExited

    private void searchButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchButtonMouseEntered
        searchButton.setBackground(new java.awt.Color(173, 216, 230));
    }//GEN-LAST:event_searchButtonMouseEntered

    private void searchButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchButtonMouseExited
        searchButton.setBackground(new java.awt.Color(153, 153, 255));
    }//GEN-LAST:event_searchButtonMouseExited
    
    // This method is used to set the screen to visible
    public void start() {
        new HostelAD().setVisible(true);
    }
    
    // This method is used to show the details of the room selected by the user.
    // It takes in the index of the room selected from the JList.
    private void showInForm(int index) {
        Room room = rooms.get(getValidIndex(index));
        RoomType type = RoomHandling.matchRoom(room);
        
        roomID.setText(room.getRoomID());
        roomStatus.setSelectedItem(room.getStatus());
        
        if (room.isServicing()) yesRadioButton.doClick();
        else noRadioButton.doClick();
        
        noOfBedsBox.setText(Integer.toString(type.getBeds()));
        floorBox.setText(RoomHandling.getRoomFloor(room));
        freeWifiBox.setText(Boolean.toString(type.isFreeWifi()));
        priceBox.setText(Double.toString(type.getRentalFee()));
        specificationBox.setText(type.getSpecification());
        roomType.setSelectedItem(type.getTypeName());
        formatFacilitiesData(type);
    }

    private void formatFacilitiesData(RoomType type){
        String dataAll = type.getFacilitiesString();
        facilitiesTextArea.setText(dataAll); 
    }
    // The code below is used to check the index of the room
    // and to make sure that the index is not out of bounds
    private int getValidIndex(int index) {
        if (index >= rooms.size()) {
            record = 0;
            return record;
        }
        else if (index < 0) {
            record = rooms.size() - 1;
            return record;
        }
        return index;
    }

    // This function modifies the room. It is called when a player wants to modify the room
    private void modifyRoom() {
        Room roomToModify = rooms.get(record);
        String oldStatus = roomToModify.getStatus();
        boolean oldServicing = roomToModify.isServicing();
        RoomType oldRoomType = roomToModify.getRoomType();
        
        String newStatus = (String) roomStatus.getSelectedItem();
        boolean newServicing = yesRadioButton.isSelected();
        RoomType newRoomType = (RoomType) RoomHandling.compareToRoomType((String) roomType.getModel().getSelectedItem());
        
  
        boolean statusChanged = !oldStatus.equals(newStatus);
        boolean servicingChanged = oldServicing != newServicing;
        boolean roomTypeChange = !oldRoomType.equals(newRoomType);
            
        if (statusChanged || servicingChanged || roomTypeChange) {
            roomToModify.setStatus(newStatus);
            roomToModify.setServicing(newServicing);
            roomToModify.setRoomType(newRoomType);
            RoomHandling.updateRoomFile(rooms);
            PopUpWindow.showSuccessfulMessage(
                "Your updates to the room details have been successfully applied", 
                "Congrats!"
            );
        } else {
            PopUpWindow.showSuccessfulMessage(
                "You didn't make any changes", 
                "Nothing happened"
            );            
        }
    }

    // This function searches a room number in the room list
    private void searchRoom() {
        String key = searchBox.getText().trim();
        if (key != null && key.length() > 0) key = key.substring(0, 1).toUpperCase() + key.substring(1);
        record = findRoomRecordNumber(key);
        if (record >= 0) showInForm(record);
        else PopUpWindow.showErrorMessage("Your search did not match any records", "Error 404 occurred");
        searchBox.setText("");
    }

    // This function finds the index of the room in the room list
    private int findRoomRecordNumber(String searchKey) {
        for (int i = 0; i < rooms.size(); i++) {
            if (searchKey.equals(rooms.get(i).getRoomID())) return i;
        }
        return -1;
    }
    
    // This function deletes a room
    private void deleteRoom(){
        String roomNo = rooms.get(record).getRoomID();
        RoomHandling.deleteRoomData(rooms, roomNo);
        PopUpWindow.showSuccessfulMessage(
            "The room details have been deleted successfully", 
            "Congrats!"
        );
        dispose();
        new HostelAD().start();
        showInForm(0);
    }
    
    // Appends a room to the end of the room list.
    private void appendRoom(){
        Room roomToAppend = new Room(
                roomID.getText(), 
                (String) roomStatus.getModel().getSelectedItem(), 
                yesRadioButton.isSelected(), 
                (RoomType) RoomHandling.compareToRoomType((String) roomType.getModel().getSelectedItem()));
        RoomHandling.appendRoomFile(roomToAppend);
        PopUpWindow.showSuccessfulMessage(
            "The room details have been added successfully", 
            "Congrats!"
        );
        isAppend = false;
    }

    // Checks if the user input in the text field is an integer
    // private boolean checkPositiveInt(JTextField text, boolean flag){
    //    try {
    //        int value = Integer.parseInt(text.getText());
    //        if (value <= 0) throw new NumberFormatException();
    //    } catch (NumberFormatException e) {
    //        flag = false;
    //        text.setText("");
    //        PopUpWindow.showFormatErrorMessage(
    //        "Please ensure you've entered an integer", 
    //        "Invalid Integer Input"
    //        );
    //    }
    //    return flag;
    //}

    /**
     * @param args the command line arguments
     */
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HostelAD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new HostelAD().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JLabel applicationIcon;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton doneButton;
    private javax.swing.JTextArea facilitiesTextArea;
    private javax.swing.JButton firstQuery;
    private javax.swing.JTextField floorBox;
    private javax.swing.JTextField freeWifiBox;
    private javax.swing.JLabel hostelIcon;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton lastQuery;
    private javax.swing.JButton nextQuery;
    private javax.swing.JTextField noOfBedsBox;
    private javax.swing.JRadioButton noRadioButton;
    private javax.swing.JButton previousQuery;
    private javax.swing.JTextField priceBox;
    private javax.swing.JButton removeButton;
    private javax.swing.JLabel reportsIcon;
    private javax.swing.JLabel roomID;
    private javax.swing.JComboBox<String> roomStatus;
    private javax.swing.JTable roomTable;
    private javax.swing.JComboBox<String> roomType;
    private javax.swing.JTextField searchBox;
    private javax.swing.JButton searchButton;
    private javax.swing.JTextField searchField;
    private javax.swing.JLabel signoutIcon;
    private javax.swing.JTextField specificationBox;
    private javax.swing.JLabel students;
    private javax.swing.ButtonGroup yesOrNo;
    private javax.swing.JRadioButton yesRadioButton;
    // End of variables declaration//GEN-END:variables
}
